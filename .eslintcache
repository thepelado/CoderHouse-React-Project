[{"E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\index.js":"1","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\reportWebVitals.js":"2","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\App.js":"3","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\components\\navbar\\index.js":"4","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\components\\navbar\\navlogo\\index.js":"5","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\components\\navbar\\navitems\\index.js":"6","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\components\\navbar\\cartwidget\\index.js":"7","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\containers\\itemlistcontainer\\index.js":"8","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\components\\itemlist\\index.js":"9","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\components\\itemlist\\item\\index.js":"10","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\containers\\itemdetailcontainer\\index.js":"11","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\components\\itemlist\\item\\itemdetail\\index.js":"12","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\components\\itemlist\\item\\itemdetail\\itemcount\\index.js":"13","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\components\\footer\\index.js":"14","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\data\\productos.js":"15","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\containers\\page404\\index.js":"16","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\components\\cart\\index.js":"17","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\context\\cartContext.js":"18","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\containers\\itemsearchcontainer\\index.js":"19","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\components\\searchform\\index.js":"20","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\components\\cart\\cartitem\\index.js":"21","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\context\\wishListContext.js":"22","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\components\\wishlist\\index.js":"23","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\components\\wishlist\\wishlistitem\\index.js":"24","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\Firebase\\index.js":"25","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\context\\firebaseContext.js":"26","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\Firebase\\config.js":"27","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\components\\login\\index.js":"28","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\containers\\logincontainer\\index.js":"29","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\components\\register\\index.js":"30","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\components\\order\\index.js":"31","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\containers\\orderdetailcontainer\\index.js":"32","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\containers\\perfilcontainer\\index.js":"33","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\components\\order\\orderitem\\index.js":"34","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\components\\order\\orderitem\\orderdetail\\index.js":"35","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\components\\order\\orderitem\\orderdetail\\orderdetailitem\\index.js":"36"},{"size":500,"mtime":499162500000,"results":"37","hashOfConfig":"38"},{"size":362,"mtime":499162500000,"results":"39","hashOfConfig":"38"},{"size":2454,"mtime":1614700252495,"results":"40","hashOfConfig":"38"},{"size":635,"mtime":1614340621734,"results":"41","hashOfConfig":"38"},{"size":397,"mtime":1614338587461,"results":"42","hashOfConfig":"38"},{"size":711,"mtime":1614339739444,"results":"43","hashOfConfig":"38"},{"size":2530,"mtime":1614699633135,"results":"44","hashOfConfig":"38"},{"size":2862,"mtime":1614559142730,"results":"45","hashOfConfig":"38"},{"size":351,"mtime":1614349548106,"results":"46","hashOfConfig":"38"},{"size":1457,"mtime":1614349434113,"results":"47","hashOfConfig":"38"},{"size":1850,"mtime":1614702911641,"results":"48","hashOfConfig":"38"},{"size":5250,"mtime":1614347658415,"results":"49","hashOfConfig":"38"},{"size":909,"mtime":1614347793415,"results":"50","hashOfConfig":"38"},{"size":5208,"mtime":1614038559058,"results":"51","hashOfConfig":"38"},{"size":3835,"mtime":1614215891890,"results":"52","hashOfConfig":"38"},{"size":1024,"mtime":1613265262881,"results":"53","hashOfConfig":"38"},{"size":4967,"mtime":1614697368286,"results":"54","hashOfConfig":"38"},{"size":2067,"mtime":1614698964710,"results":"55","hashOfConfig":"38"},{"size":2918,"mtime":1614558433299,"results":"56","hashOfConfig":"38"},{"size":898,"mtime":1613494264117,"results":"57","hashOfConfig":"38"},{"size":1585,"mtime":1614209410866,"results":"58","hashOfConfig":"38"},{"size":1347,"mtime":1614208534108,"results":"59","hashOfConfig":"38"},{"size":2213,"mtime":1614349315266,"results":"60","hashOfConfig":"38"},{"size":991,"mtime":1614208575442,"results":"61","hashOfConfig":"38"},{"size":321,"mtime":1614219280058,"results":"62","hashOfConfig":"38"},{"size":4709,"mtime":1614702909462,"results":"63","hashOfConfig":"38"},{"size":367,"mtime":1614219259713,"results":"64","hashOfConfig":"38"},{"size":2677,"mtime":1614690838101,"results":"65","hashOfConfig":"38"},{"size":1363,"mtime":1614648123080,"results":"66","hashOfConfig":"38"},{"size":3636,"mtime":1614690833572,"results":"67","hashOfConfig":"38"},{"size":765,"mtime":1614710429862,"results":"68","hashOfConfig":"38"},{"size":2519,"mtime":1614703606592,"results":"69","hashOfConfig":"38"},{"size":2333,"mtime":1614705604923,"results":"70","hashOfConfig":"38"},{"size":1089,"mtime":1614710334874,"results":"71","hashOfConfig":"38"},{"size":1481,"mtime":1614703923023,"results":"72","hashOfConfig":"38"},{"size":1223,"mtime":1614703996423,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"15n03p0",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"76"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"76"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"76"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"76"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"76"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"76"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"76"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\index.js",[],["166","167"],"E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\reportWebVitals.js",[],"E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\App.js",[],"E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\components\\navbar\\index.js",["168"],"import Navlogo from './navlogo/';\r\nimport Navitems from './navitems/';\r\nimport Cartwidget from './cartwidget/';\r\nimport { Navbar as NavbarBootstrap, Nav } from \"react-bootstrap\";\r\nimport './navbar.css';\r\n\r\nconst Navbar = () => {\r\n    return(\r\n        <NavbarBootstrap variant=\"dark\" expand=\"lg\" className=\"navbar\">\r\n            <Navlogo/>\r\n            <NavbarBootstrap.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <NavbarBootstrap.Collapse id=\"basic-navbar-nav\">\r\n                <Navitems/>\r\n            </NavbarBootstrap.Collapse>\r\n            <Cartwidget/>\r\n        </NavbarBootstrap>\r\n    );\r\n}\r\n\r\nexport default Navbar;","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\components\\navbar\\navlogo\\index.js",["169","170"],"import { Link } from 'react-router-dom';\r\nimport { Navbar as NavbarBootstrap, Nav } from \"react-bootstrap\";\r\nimport './navlogo.css'\r\n\r\nconst Navlogo = () => {\r\n    return(\r\n        <NavbarBootstrap.Brand href=\"/\" className=\"navbar-brand\">\r\n            <img src='/assets/img/logo.png' className='logo' alt=\"Life Informática\"/>\r\n        </NavbarBootstrap.Brand>\r\n    );\r\n}\r\n\r\nexport default Navlogo","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\components\\navbar\\navitems\\index.js",["171"],"import { Link } from 'react-router-dom';\r\nimport { Nav, NavDropdown } from \"react-bootstrap\";\r\nimport './navitems.css';\r\n\r\nconst Navitems = () => {\r\n    return(\r\n        <Nav className=\"mr-auto\">\r\n            <NavDropdown title=\"Categor&iacute;as\" id=\"collasible-nav-dropdown\">\r\n                <NavDropdown.Item href=\"/category/Mouse\">Mouse</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"/category/Teclados\">Keyboards</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"/category/Webcams\">Webcams</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"/category/Monitores\">Monitores</NavDropdown.Item>\r\n            </NavDropdown>\r\n        </Nav>\r\n    );\r\n}\r\n\r\nexport default Navitems;","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\components\\navbar\\cartwidget\\index.js",[],"E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\containers\\itemlistcontainer\\index.js",["172"],"import React, { useState, useEffect } from 'react';\r\nimport { useFirebaseContext } from '../../context/firebaseContext';\r\nimport { useParams } from 'react-router-dom';\r\nimport ItemList from '../../components/itemlist';\r\nimport './itemlistcontainer.css';\r\nimport { Col, Row } from 'react-bootstrap';\r\n\r\nconst ItemListContainer = () => {\r\n\r\n    const [ items, setItems ] = useState([]);\r\n    const [ categoryTitle, setCategoryTitle ] = useState();\r\n    const [ isLoading, setIsLoading ] = useState();\r\n    const { category } = useParams();\r\n    const { getAllItems, getItemsByCategory } = useFirebaseContext();\r\n    \r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        if (category) {\r\n            setCategoryTitle(category);\r\n            getItemsByCategory(category).then((querySnapshot) => {\r\n                if (querySnapshot.length === 0) {\r\n                    console.log('Error');\r\n                } else {\r\n                    if (querySnapshot.docs.length > 0) {                        \r\n                        setItems(querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() })));\r\n                    } else {\r\n                        setItems([]);\r\n                    }\r\n                }\r\n            }).catch(error => console.log(error)).finally(() => setIsLoading(false))\r\n        } else {\r\n            getAllItems().then((querySnapshot) => {\r\n                if (querySnapshot.length === 0) {\r\n                    console.log('No hay datos');\r\n                    setIsLoading(false)\r\n                } else {\r\n                    setItems(querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() })))\r\n                    setIsLoading(false)\r\n                }\r\n            }).catch(error => console.log(error));\r\n        }\r\n    }, [category]);\r\n\r\n    if (isLoading)\r\n    {\r\n        return (\r\n            <Row className=\"list-items flex-wrap\">\r\n                <Col xs={12} className=\"text-center mt-5\">                \r\n                    <div className=\"spinner-border\" role=\"status\">\r\n                        <span className=\"sr-only\">Cargando...</span>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Row className=\"list-items mt-2 flex-wrap\">\r\n            { category &&\r\n                <Col xs={12}>\r\n                    <h2>{categoryTitle}</h2>\r\n                    <hr/>\r\n                </Col>\r\n            }\r\n            <Col xs={12}>\r\n                <Row className=\"mt-2\">\r\n                    { items && items.length > 0 ?\r\n                        <ItemList itemsData={items}/>\r\n                        :\r\n                        <p className=\"w-100 text-center\">No hay productos en esta categoría</p>              \r\n                    }\r\n                </Row> \r\n            </Col>\r\n\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ItemListContainer;","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\components\\itemlist\\index.js",[],"E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\components\\itemlist\\item\\index.js",[],"E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\containers\\itemdetailcontainer\\index.js",["173"],"import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport ItemDetail from '../../components/itemlist/item/itemdetail';\r\nimport { useFirebaseContext } from '../../context/firebaseContext';\r\nimport './itemdetailcontainer.css';\r\nimport Page404 from '../page404';\r\nimport { Col, Row, Container } from 'react-bootstrap';\r\n\r\nconst ItemDetailContainer = () => {\r\n\r\n    const [ item, setItem ] = useState({});\r\n    const [ isLoading, setIsLoading ] = useState();\r\n    const { getItemByID } = useFirebaseContext();\r\n    const { itemId } = useParams();\r\n \r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        getItemByID(itemId).then((querySnapshot) => {\r\n            setItem({id: querySnapshot.id, ...querySnapshot.data()});\r\n        }).catch(error => console.log(error)).finally(() => setIsLoading(false))\r\n    }, []);\r\n\r\n        if (isLoading)\r\n        {\r\n            return (\r\n                <Row className=\"item-detail-container pt-3 pb-5\">\r\n                    <Container>\r\n                        <Row>\r\n                            <Col xs={12} className=\"p-5 text-center\">\r\n                                <div className=\"spinner-border\" role=\"status\">\r\n                                    <span className=\"sr-only\">Cargando...</span>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Row>\r\n            )\r\n        }\r\n        if (!item)\r\n        {\r\n            return (\r\n                <Page404/>\r\n            )\r\n        }\r\n        return (\r\n            <Row className=\"item-detail-container pt-3 pb-5\">\r\n                <Container>\r\n                    <ItemDetail item={item} />\r\n                </Container>\r\n            </Row>\r\n        )\r\n}\r\n\r\nexport default ItemDetailContainer;","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\components\\itemlist\\item\\itemdetail\\index.js",[],"E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\components\\itemlist\\item\\itemdetail\\itemcount\\index.js",[],"E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\components\\footer\\index.js",[],"E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\data\\productos.js",[],["174","175"],"E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\containers\\page404\\index.js",[],"E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\components\\cart\\index.js",["176"],"import NumberFormat from 'react-number-format';\r\nimport { useFirebaseContext } from '../../context/firebaseContext';\r\nimport { useCartContext } from '../../context/cartContext';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport CartItem from './cartitem';\r\nimport { Col, Row, Container, Table, Button } from 'react-bootstrap';\r\nimport './cart.css';\r\n\r\n\r\nconst Cart = () => {\r\n    const history = useHistory();\r\n    const { cart, loggedUser, clearCart } = useCartContext();\r\n    const { updateStock, createOrder } = useFirebaseContext();\r\n    const handleClearCart = () => {\r\n        clearCart();\r\n    }\r\n\r\n    const handlePushOrder = () => {\r\n        let newOrder = { buyer: loggedUser, items: [...cart], total: cart.totalPrice}\r\n        //Actualizo el stock de los productos\r\n        updateStock(cart).then( (result) => {\r\n            //Ya actualizado el stock, almaceno la orden de compra\r\n            return createOrder(newOrder);\r\n        })\r\n        .then( (order) => {\r\n            //Borro el carrito\r\n            clearCart();           \r\n            //Redirijo al componente para mostrar la orden de compra\r\n            history.push(`/order/${order.id}`)\r\n        })\r\n        .catch( (error) => console.error(error));\r\n    }\r\n\r\n    return (\r\n        <Container className=\"cart-resume\">\r\n            <Row className=\"mt-5 mb-5 justify-content-center\">\r\n                {cart.length == 0 ?\r\n                    <Col xs={12} className=\"text-center\">\r\n                        <i className=\"fas fa-shopping-cart fa-5x\" style={{ \"color\": \"#E8E9EB\" }}></i>\r\n                        <h4 className=\"my-4\">El carro está vacío. ¡Sigue explorando nuestra tienda para encontrar un producto ideal para ti!</h4>\r\n                        <Link to=\"/\" className=\"text-white\">  \r\n                            <Button variant=\"danger\">¡Sigue comprando!</Button>\r\n                        </Link>\r\n                    </Col>\r\n                :\r\n                    <Col xs={12}>\r\n                        <Row>\r\n                            <h3>RESUMEN DE LA COMPRA</h3>\r\n                            <Table responsive className=\"product mt-3\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th className=\"product-remove\">&nbsp;</th>\r\n                                        <th className=\"product-thumbnail\">&nbsp;</th>\r\n                                        <th className=\"product-name\">Producto</th>\r\n                                        <th className=\"product-price\">Precio</th>\r\n                                        <th className=\"product-quantity\">Cantidad</th>\r\n                                        <th className=\"product-subtotal\">Total</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        cart.map((cartItem, index) => \r\n                                            <CartItem cartItem={cartItem} key={index}></CartItem>\r\n                                        )\r\n                                    }\r\n                                </tbody>\r\n                                <tfoot>\r\n                                    <tr>\r\n                                        <td colSpan=\"5\" className=\"text-right\">Subtotal</td>\r\n                                        <td className=\"cart-total\">\r\n                                            <NumberFormat value={cart.totalPrice} decimalSeparator={','} displayType={'text'} thousandSeparator={'.'} prefix={'$'} />\r\n                                        </td>\r\n                                    </tr>\r\n                                </tfoot>\r\n                            </Table>\r\n                        </Row>\r\n                        { !loggedUser.id?\r\n                            <>\r\n                                <Row className=\"justify-content-center my-3\">\r\n                                    <p>¿Todavía no eres cliente? <Link to={'/login?tab=register'} className=\"btn btn-success\">Registrate</Link></p> \r\n                                </Row>\r\n                            </>\r\n                            :\r\n                            <>\r\n                                <Row className=\"justify-content-center my-3\">\r\n                                    <Button variant=\"success\" onClick={handlePushOrder}>Terminar compra</Button>\r\n                                </Row>\r\n                            \r\n                                <Row className=\"justify-content-center my-3\">\r\n                                    <Button variant=\"danger\" onClick={handleClearCart}>Vaciar carro de compras</Button>\r\n                                </Row>\r\n                            </>                            \r\n                        }\r\n                    </Col>\r\n                }\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Cart;","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\context\\cartContext.js",["177"],"import React, { useState, useEffect, useContext } from 'react';\r\n\r\nexport const CartContext = React.createContext([]);\r\nexport const useCartContext = () => useContext(CartContext);\r\n\r\nconst CartProvider = ({ defaultValue = [], children }) => {\r\n\r\n    const cartLocalStorage = JSON.parse(localStorage.getItem('cart'));\r\n    const [cart, setCart] = useState(cartLocalStorage && cartLocalStorage.length > 0 ? cartLocalStorage : defaultValue);\r\n    cart.totalPrice = cart.length > 0 ? cart.reduce((total, cartItem) => total + (cartItem.qty * cartItem.item.price), 0) : '0,00';\r\n    cart.count = cart.length > 0 ? cart.reduce((total, cartItem) => total + cartItem.qty, 0) : '0';\r\n\r\n    const userLocalStorage = JSON.parse(localStorage.getItem('user'));\r\n    const [loggedUser, setLoggedUser] = useState(userLocalStorage? userLocalStorage : defaultValue);\r\n\r\n    const addItem = async(item, qty) => {\r\n        if (!isInCart(item.id)) {\r\n            const newCart = [...cart, { item:item, qty: qty }];\r\n            setCart(newCart);\r\n        } else {\r\n            setCart(cart.map(cartItem => {\r\n                if (cartItem.item.id === item.id) {\r\n                    return { ...cartItem, qty: cartItem.qty + qty }\r\n\r\n                } else {\r\n                    return cartItem\r\n                }\r\n            }))\r\n        }\r\n        \r\n    }\r\n\r\n    const removeItem = (itemId) => {\r\n        setCart(cart.filter(cartItem => cartItem.item.id !== itemId))\r\n    }\r\n\r\n    const clearCart = () => setCart([]);\r\n\r\n    const isInCart = (id) => {\r\n        return cart.some(cartItem => cartItem.item.id == id);\r\n    }\r\n\r\n    const setUser = (user) => {\r\n        setLoggedUser(user);\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n    }\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('cart', JSON.stringify(cart));\r\n    }, [cart, loggedUser]);\r\n\r\n    return (\r\n        <CartContext.Provider value={{cart, loggedUser, addItem, removeItem, clearCart, setUser}}>\r\n            {children}\r\n        </CartContext.Provider>\r\n    )\r\n}\r\n\r\nexport default CartProvider;","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\containers\\itemsearchcontainer\\index.js",["178","179"],"import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport ItemList from '../../components/itemlist';\r\nimport { useFirebaseContext } from '../../context/firebaseContext';\r\nimport './itemsearchcontainer.css';\r\nimport { Col, Row } from 'react-bootstrap';\r\n\r\nconst ItemSearchContainer = () => {\r\n\r\n    const [ items, setItems ] = useState([]);\r\n    const [ criterio, setCriterio ] = useState();\r\n    const [ isLoading, setIsLoading ] = useState();\r\n    const [queryParams, setQueryParams] = useState(new URLSearchParams(useLocation().search));\r\n    const { getAllItems } = useFirebaseContext();\r\n    \r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        setCriterio(queryParams.get(\"s\"));\r\n        if (criterio) {\r\n            /*Firebase no tiene forma de hacer consultas del tipo OR o con Like %% y multiples campos por\r\n            lo que decidi obtener todos los productos en stock y filtrar sobre estos */  \r\n            getAllItems().then((querySnapshot) => {\r\n                if (querySnapshot.length === 0) {\r\n                    console.log('Error');\r\n                } else {\r\n                    if (querySnapshot.docs.length > 0) {\r\n                        const queryResult = querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n                        setItems(queryResult.filter((result) => \r\n                            result.title.toLowerCase().indexOf(criterio.toLowerCase())>=0 || \r\n                            result.brand.toLowerCase().indexOf(criterio.toLowerCase())>=0\r\n                        ));\r\n                    } else {\r\n                        setItems([]);\r\n                    }\r\n                }\r\n            }).catch(error => console.log(error)).finally(() => setIsLoading(false))\r\n        }\r\n    }, [criterio]);\r\n\r\n\r\n\r\n    if (isLoading)\r\n    {\r\n        return (\r\n            <Row className=\"list-items mt-2 flex-wrap\">\r\n                <Col xs={12} className=\"text-center\">                \r\n                    <div className=\"spinner-border\" role=\"status\">\r\n                        <span className=\"sr-only\">Cargando...</span>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Row className=\"list-items mt-2 flex-wrap\">\r\n            { criterio &&\r\n                <Col xs={12}>\r\n                    <h2>Resultados de búsqueda: \"{criterio}\"</h2>\r\n                    <hr/>\r\n                </Col>\r\n            }\r\n            <Col xs={12}>\r\n                <Row>\r\n                    { items && items.length > 0?\r\n                        <ItemList itemsData={items}/>\r\n                    :\r\n                        <p className=\"w-100 text-center\">No se encontrarón productos para su busqueda</p>                \r\n                    }\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ItemSearchContainer;","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\components\\searchform\\index.js",[],"E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\components\\cart\\cartitem\\index.js",["180"],"import NumberFormat from 'react-number-format';\r\nimport { useCartContext } from '../../../context/cartContext';\r\nimport { Link } from 'react-router-dom';\r\nimport './cartitem.css';\r\n\r\nconst CartItem = ({cartItem}) => {\r\n    const { cart, removeItem} = useCartContext();\r\n\r\n    const handleRemoveItem = () => {\r\n        removeItem(cartItem.item.id);\r\n    }\r\n\r\n    return (\r\n        <tr className=\"item\">\r\n            <td className=\"align-middle\">\r\n                <button onClick={handleRemoveItem}><i className=\"fas fa-times\"></i></button>\r\n            </td>\r\n            <td>\r\n                <img className='photo img-fluid' src={cartItem.item.photo} alt={cartItem.item.title}></img>\r\n            </td> \r\n            <td className=\"align-middle\">\r\n                <Link to={`/item/${cartItem.item.id}`} className=\"text-secondary\">{cartItem.item.title}</Link>\r\n            </td>\r\n            <td className=\"align-middle\">\r\n                <strong>\r\n                    <NumberFormat value={cartItem.item.price } decimalSeparator={','} displayType={'text'} thousandSeparator={'.'} prefix={'$'} />\r\n                </strong>\r\n            </td>\r\n            <td className=\"align-middle\">\r\n                <strong>{cartItem.qty}</strong>\r\n            </td> \r\n            <td className=\"align-middle\">\r\n                <strong>\r\n                    <NumberFormat value={cartItem.qty * cartItem.item.price } decimalSeparator={','} displayType={'text'} thousandSeparator={'.'} prefix={'$'} />\r\n                </strong>\r\n            </td> \r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default CartItem;","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\context\\wishListContext.js",["181","182"],"import React, { useState, useEffect, useContext } from 'react';\r\n\r\nexport const WishListContext = React.createContext([]);\r\nexport const useWishListContext = () => useContext(WishListContext);\r\n\r\nconst WishListProvider = ({ defaultValue = [], children }) => {\r\n\r\n    const wishlistLocalStorage = JSON.parse(localStorage.getItem('wishlist'));\r\n    const [wishList, setWishList] = useState(wishlistLocalStorage && wishlistLocalStorage.length > 0 ? wishlistLocalStorage : defaultValue);\r\n\r\n    const updateItemWishList = async(item) => {\r\n        if (!isInWishList(item.id)) {\r\n            const newWishList = [...wishList, item];\r\n            setWishList(newWishList);\r\n        } else {\r\n            removeItemWishList(item);\r\n        }        \r\n    }\r\n\r\n    const removeItemWishList = (item) => {\r\n        setWishList(wishList.filter(wishListItem => wishListItem.id != item.id));\r\n    }\r\n\r\n    const isInWishList = (id) => {\r\n        return wishList.some(wishListItem => wishListItem.id == id);\r\n    }\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('wishlist', JSON.stringify(wishList));\r\n    }, [wishList]);\r\n\r\n    return (\r\n        <WishListContext.Provider value={{wishList, updateItemWishList, isInWishList, removeItemWishList}}>\r\n            {children}\r\n        </WishListContext.Provider>\r\n    )\r\n}\r\n\r\nexport default WishListProvider;","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\components\\wishlist\\index.js",["183"],"import { useWishListContext } from '../../context/wishListContext';\r\nimport { Link } from 'react-router-dom';\r\nimport WishListItem from './wishlistitem';\r\nimport './wishlist.css';\r\nimport { Col, Row, Container, Table, Button } from 'react-bootstrap';\r\n\r\nconst WishList = () => {\r\n    const { wishList } = useWishListContext();\r\n\r\n    return (\r\n        <Container className=\"wishlist-resume\">\r\n            <Row className=\"mt-5 mb-5 justify-content-center\">\r\n                {wishList.length == 0 ?\r\n                    <Col xs={12} className=\"text-center\">\r\n\r\n                        <i className=\"fas fa-shopping-wishlist fa-5x\" style={{ \"color\": \"#E8E9EB\" }}></i>\r\n                        <h4 className=\"my-4\">Su lista de deseos está vacía. ¡Sigue explorando nuestra tienda para encontrar un producto ideal para ti!</h4>\r\n                        <Link to=\"/\" className=\"text-white\">                            \r\n                            <Button variant=\"danger\">¡Sigue comprando!</Button>\r\n                        </Link>\r\n                    </Col>\r\n                :\r\n                    <Col xs={12}>\r\n                        <h3>LISTA DE DESEOS</h3>\r\n                        <Table responsive className=\"product mt-3\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className=\"product-remove\">&nbsp;</th>\r\n                                    <th className=\"product-thumbnail\">&nbsp;</th>\r\n                                    <th className=\"product-name\">Producto</th>\r\n                                    <th className=\"product-price\">Precio</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    wishList.map((item, index) => \r\n                                        <WishListItem item={item} key={index}></WishListItem>\r\n                                    )\r\n                                }\r\n                            </tbody>\r\n                        </Table>\r\n                    </Col>\r\n                }\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default WishList;","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\components\\wishlist\\wishlistitem\\index.js",[],"E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\Firebase\\index.js",[],"E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\context\\firebaseContext.js",["184","185"],"import React, { useContext } from 'react';\r\nimport { getFirestore } from '../Firebase';\r\nimport firebase from 'firebase/app';\r\nimport sha1 from 'sha1';\r\nexport const FirebaseContext = React.createContext(false);\r\nexport const useFirebaseContext = () => useContext(FirebaseContext);\r\n\r\n\r\nconst FirebaseProvider = ({ children }) => {\r\n\r\n    const db = getFirestore();\r\n \r\n    /* Items */\r\n    const getAllItems = () => {    \r\n        return db.collection('ITEMS').where('stock', \"!=\", 0).get();\r\n    }\r\n\r\n    const getItemByID = (itemId) => {\r\n        return db.collection('ITEMS').doc(itemId).get();\r\n    }\r\n\r\n    const getItemsByCategory = (category) => {\r\n        return db.collection('ITEMS').where('category', '==', category).get();\r\n    }\r\n\r\n    const updateStock = (cart) => {\r\n        return new Promise((resolve, reject) => {\r\n            cart.map(async(cartItem) => {\r\n                let query = await db.collection('ITEMS').doc(cartItem.item.id).get();\r\n                if (!query.empty) {\r\n                    const productData = query.data();\r\n                    if (productData.stock >= cartItem.qty) {\r\n                        //Resto el stock\r\n                        productData.stock -= cartItem.qty;\r\n                        //Actualizo las existencias\r\n                        try {\r\n                            await db.collection('ITEMS').doc(cartItem.item.id).update({ stock: productData.stock -= cartItem.qty });//db.collection('ITEMS').doc(cartItem.item.id).update({ stock : productData.stock});\r\n                        } catch(e) {\r\n                            reject('Error al operar sobre la Base de Datos');\r\n                        }\r\n                    }\r\n                    else {\r\n                        reject(`No existen suficientes ${productData.title} para cubrir la demanda`);\r\n                    }\r\n                } else {\r\n                    reject('No existe el producto en la DB');\r\n                }\r\n            })\r\n            resolve(true);\r\n        });\r\n    }\r\n\r\n    /*Users*/\r\n    const registerUser = (data) => {\r\n        return new Promise(async(resolve, reject) => {\r\n            const res = await db.collection('USERS').add(data);\r\n            data.password = sha1(data.password);\r\n            if (res.id) {\r\n                localStorage.setItem('user', JSON.stringify({ id: res.id, nombre: data.nombre, phone: data.phone, email: data.email }));\r\n                resolve({ id: res.id, nombre: data.nombre, phone: data.phone, email: data.email });\r\n            } else {\r\n                reject('Error al almacenar en Firebase');\r\n            }\r\n        });\r\n    }\r\n\r\n    const loginUser = (data) => {\r\n        return new Promise(async(resolve, reject) => {\r\n            data.password = sha1(data.password);\r\n            const query =  await db.collection('USERS').where('email', '==', data.email).get();\r\n            if (!query.empty) {\r\n                const snapshot = query.docs[0];\r\n                const userData = snapshot.data();\r\n                if (data.password == userData.password) {\r\n                    localStorage.setItem('user', JSON.stringify({ id: snapshot.id, nombre: userData.nombre, phone: userData.phone, email: userData.email }));\r\n                    resolve({ id: snapshot.id, nombre: userData.nombre, phone: userData.phone, email: userData.email });\r\n                } else {\r\n                    reject('Usuario/Contraseña no válidos');\r\n                }\r\n            } else {\r\n                reject('Usuario/Contraseña no válidos');\r\n            }\r\n        });\r\n    }\r\n\r\n    /* Orders */\r\n    const createOrder = async(data) => {\r\n        return new Promise(async(resolve, reject) => {\r\n            const FieldValue = db.FieldValue;\r\n            const newOrder = {\r\n                ...data,\r\n                date: firebase.firestore.Timestamp.fromDate(new Date())\r\n            }\r\n            const res = await db.collection('ORDERS').add(newOrder);\r\n            if (res.id) {\r\n                resolve({ id: res.id, ...newOrder });\r\n            } else {\r\n                reject('Error al almacenar en Firebase');\r\n            }\r\n        });\r\n    }\r\n\r\n    const getOrderByID = (orderId) => {\r\n        return db.collection('ORDERS').doc(orderId).get();\r\n    }\r\n\r\n    const getOrdersByUser = (userId) => {\r\n        console.log(userId);\r\n        return db.collection('ORDERS').where('buyer.id', '==', userId).get();\r\n    }\r\n\r\n\r\n    return (\r\n        <FirebaseContext.Provider value={{ getAllItems, getItemByID, getItemsByCategory, createOrder, getOrderByID, getOrdersByUser, updateStock, registerUser, loginUser}}>\r\n            {children}\r\n        </FirebaseContext.Provider>\r\n    )\r\n}\r\n\r\nexport default FirebaseProvider;","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\Firebase\\config.js",[],"E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\components\\login\\index.js",["186"],"import React, { useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Form, Collapse, Alert } from 'react-bootstrap';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useFirebaseContext } from '../../context/firebaseContext';\r\nimport { useCartContext } from '../../context/cartContext';\r\nimport './login.css';\r\n\r\nconst Login = () => {\r\n    const [error, setError] = useState('');\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const { loginUser } = useFirebaseContext();\r\n    const { setUser } = useCartContext();\r\n    \r\n    const history = useHistory();\r\n    const onSubmitLogin = (data) => {\r\n        setError('');\r\n        setOpen(false);\r\n        let userData = data;\r\n        loginUser(userData).then( (result) => {\r\n            console.log(result);\r\n            if (result.id) {\r\n                setUser(result);\r\n                history.push(\"/\");\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            setError(error)\r\n            setOpen(true);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Form className=\"form-login\" onSubmit={handleSubmit(onSubmitLogin)}>\r\n            <p className=\"before-login-text\">Bienvenido! Inicia sesión en tu cuenta.</p>\r\n            <p className={`form-row ${errors.email ? 'error' : ''}`}>\r\n\t\t\t\t<label htmlFor=\"email\">Correo electrónico</label>\r\n                <input\r\n                    name=\"email\"\r\n                    ref={register({\r\n                    required: \"Campo requerido\",\r\n                    pattern: {\r\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                        message: \"Ingrese un email válido\"\r\n                    }\r\n                    })}\r\n                    type=\"email\"\r\n                />\r\n                {errors.email && <span>* {errors.email.message}</span>} \r\n            </p>\r\n            <p className={`form-row ${errors.password ? 'error' : ''}`}>\r\n\t\t\t\t<label htmlFor=\"password\">Contraseña</label>\t\t\t\r\n                <input name=\"password\" ref={register({ required: true })} type=\"password\" autoComplete=\"current-password\"/>\r\n                {errors.password && <span>* Campo requerido</span>}        \r\n            </p>\r\n            <Button className=\"w-100\" variant=\"primary\" type=\"submit\">\r\n                Ingresar\r\n            </Button>\r\n            {error && \r\n                <Collapse in={open}>\r\n                    <Alert variant=\"danger\" className=\"w-100\">\r\n                        {error}\r\n                    </Alert>\r\n                </Collapse>\r\n            }\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default Login;","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\containers\\logincontainer\\index.js",["187"],"import './logincontainer.css';\r\nimport React, { useState } from 'react';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { Col, Row, Tabs, Tab } from 'react-bootstrap';\r\nimport Login from '../../components/login';\r\nimport Register from '../../components/register';\r\n\r\nconst LoginContainer = () => {\r\n\r\n    const [tabSelected, setTabSelected] = useState(new URLSearchParams(useLocation().search));\r\n\r\n    return (\r\n        <Row className=\"login-container flex-wrap row justify-content-center\">\r\n            <Col xs={12} className=\"text-center\">\r\n                <Row>\r\n                    <img src='/assets/img/logo.png' className='logo' alt=\"Life Informática\"/>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} md={6} className=\"mt-5 tabs-actions\">\r\n                        <Tabs defaultActiveKey={tabSelected.get(\"tab\")? 'register': 'login'} id=\"action-tab\">\r\n                            <Tab eventKey=\"login\" title=\"Login\">\r\n                                <Login/>\r\n                            </Tab>\r\n                            <Tab eventKey=\"register\" title=\"Registro\">\r\n                                <Register/>\r\n                            </Tab>\r\n                        </Tabs>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default LoginContainer;","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\components\\register\\index.js",["188","189","190","191","192"],"import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, Collapse, Alert } from 'react-bootstrap';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useFirebaseContext } from '../../context/firebaseContext';\r\nimport { useCartContext } from '../../context/cartContext';\r\nimport './register.css';\r\n\r\nconst Register = () => {\r\n    const [error, setError] = useState('');\r\n    const [open, setOpen] = useState(false);\r\n    const { cart, setUser } = useCartContext();\r\n    const { registerUser } = useFirebaseContext();\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const [ btnSubmit, setBtnSubmit ] = useState('Ingresar');\r\n    const history = useHistory();\r\n\r\n    const onSubmitRegister = (data) => {\r\n        let userData = data;\r\n        registerUser(userData).then( (result) => {\r\n            if (result.id) {\r\n                setUser(result);\r\n                if (cart.length > 0) {\r\n                    history.push('/cart');\r\n                } else {\r\n                    history.push('/');\r\n                }\r\n            } else {\r\n                console.error('Error al almacenar el usuario');\r\n            }\r\n        })\r\n        .catch((error) => console.error(error));\r\n    };\r\n\r\n\r\n    return (\r\n        <Form className=\"form-register\" onSubmit={handleSubmit(onSubmitRegister)}>\r\n            <p className=\"before-register-text\">Crea una cuenta nueva hoy.</p>\r\n            <p className={`form-row ${errors.email ? 'error' : ''}`}>\r\n\t\t\t\t<label htmlFor=\"nombre\">Nombre y Apellido</label>\r\n                <input name=\"nombre\"\r\n                    ref={register({\r\n                    required: \"Campo requerido\",\r\n                    })} type=\"text\"\r\n                />\r\n                {errors.nombre && <span>* {errors.nombre}</span>} \r\n            </p>\r\n            <p className={`form-row ${errors.phone ? 'error' : ''}`}>\r\n\t\t\t\t<label htmlFor=\"phone\">Teléfono</label>\r\n                <input name=\"phone\"\r\n                    ref={register({\r\n                    required: \"Campo requerido\",\r\n                    })} type=\"text\"\r\n                />\r\n                {errors.phone && <span>* {errors.phone}</span>} \r\n            </p>\r\n            <p className={`form-row ${errors.email ? 'error' : ''}`}>\r\n\t\t\t\t<label htmlFor=\"email\">Correo electrónico</label>\r\n                <input\r\n                    name=\"email\"\r\n                    ref={register({\r\n                    required: \"Campo requerido\",\r\n                    pattern: {\r\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                        message: \"Ingrese un email válido\"\r\n                    }\r\n                    })}\r\n                    type=\"email\"\r\n                />\r\n                {errors.email && <span>* {errors.email.message}</span>} \r\n            </p>\r\n            <p className={`form-row ${errors.password ? 'error' : ''}`}>\r\n\t\t\t\t<label htmlFor=\"password\">Contraseña</label>\t\t\t\r\n                <input name=\"password\" ref={register({ required: true })} type=\"password\" autoComplete=\"current-password\"/>\r\n                {errors.password && <span>* Campo requerido</span>}        \r\n            </p>\r\n            <Button className=\"w-100\" variant=\"primary\" type=\"submit\">\r\n                { btnSubmit }\r\n            </Button>\r\n            {error && \r\n                <Collapse in={open}>\r\n                    <Alert variant=\"danger\" className=\"w-100\">\r\n                        {error}\r\n                    </Alert>\r\n                </Collapse>\r\n            }\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default Register;","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\components\\order\\index.js",[],"E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\containers\\orderdetailcontainer\\index.js",["193","194"],"import React, { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { useFirebaseContext } from '../../context/firebaseContext';\r\nimport './orderdetailcontainer.css';\r\nimport Page404 from '../page404';\r\nimport { Col, Row, Container, Button } from 'react-bootstrap';\r\nimport OrderDetail from '../../components/order/orderitem/orderdetail'\r\n\r\nconst OrderDetailContainer = () => {\r\n\r\n    const [ order, setOrder ] = useState({});\r\n    const [ isLoading, setIsLoading ] = useState();\r\n    const { getOrderByID } = useFirebaseContext();\r\n    const { orderId } = useParams();\r\n \r\n    useEffect(async() => {\r\n        setIsLoading(true);\r\n        await getOrderByID(orderId).then((querySnapshot) => {\r\n            setOrder({id: querySnapshot.id, ...querySnapshot.data()});\r\n        }).catch(error => console.log(error)).finally(() => setIsLoading(false))\r\n    }, []);\r\n\r\n        if (isLoading)\r\n        {\r\n            return (\r\n                <Row className=\"order-detail-container pt-3 pb-5\">\r\n                    <Container>\r\n                        <Row>\r\n                            <Col xs={12} className=\"p-5 text-center\">\r\n                                <div className=\"spinner-border\" role=\"status\">\r\n                                    <span className=\"sr-only\">Cargando...</span>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Row>\r\n            )\r\n        }\r\n        if (!order)\r\n        {\r\n            return (\r\n                <Page404/>\r\n            )\r\n        }\r\n        return (\r\n            <Row className=\"order-detail-container pt-3 pb-5\">\r\n                <Container>\r\n                    <Col xs={12}>\r\n                        <h3>RESUMEN DE LA ORDEN #{order.id}</h3>\r\n                    </Col>\r\n                    <Col xs={12}>\r\n                        <OrderDetail order={order}/>\r\n                    </Col>\r\n                    <Col xs={12} className=\"text-center\">\r\n                        <h4 className=\"my-4\">¡Muchas gracias por su compra!<br/>¡Sigue explorando nuestra tienda para encontrar un producto ideal para ti!</h4>\r\n                        <Link to=\"/\" className=\"text-white\">  \r\n                            <Button variant=\"primary\">¡Sigue comprando!</Button>\r\n                        </Link>\r\n                    </Col>\r\n                </Container>\r\n            </Row>\r\n        )\r\n}\r\n\r\nexport default OrderDetailContainer;","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\containers\\perfilcontainer\\index.js",["195","196","197"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useFirebaseContext } from '../../context/firebaseContext';\r\nimport { useCartContext } from '../../context/cartContext';\r\nimport './perfil.css';\r\nimport { Col, Row, Container, Button } from 'react-bootstrap';\r\nimport Order from '../../components/order';\r\n\r\nconst PerfilContainer = () => {\r\n    const { getOrdersByUser } = useFirebaseContext();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [orders, setOrders] = useState([]);\r\n    const { loggedUser } = useCartContext();\r\n    const history = useHistory();\r\n \r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        getOrdersByUser(loggedUser.id)\r\n            .then((querySnapshot) => {\r\n                if (querySnapshot.length === 0) {\r\n                    console.log('Error');\r\n                } else {\r\n                    if (querySnapshot.docs.length > 0) {                        \r\n                        setOrders(querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() })));\r\n                    }\r\n                }\r\n            }).catch(error => console.log(error)).finally(() => setIsLoading(false))\r\n    }, []);\r\n\r\n    if (!loggedUser)\r\n    {\r\n        return (\r\n            history.push('/')\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Row className=\"order-detail-container pt-3 pb-5\">\r\n            <Container>\r\n                <Row>\r\n                    <Col xs={12}>\r\n                        <h3>DATOS DEL USUARIO</h3>\r\n                    </Col>\r\n                    <Col xs={12}>\r\n                        <p>Nombre: {loggedUser.nombre}</p>\r\n                        <p>Email: {loggedUser.email}</p>\r\n                        <p>Teléfono: {loggedUser.phone}</p>\r\n                    </Col>\r\n                    <Col xs={12} className=\"mt-5\">\r\n                        <h3>HISTORIAL DE ORDENES</h3>\r\n                    </Col>\r\n                    <Col xs={12}>\r\n                        {\r\n                            orders.map( (orderItem, index) => {\r\n                                return <Order order={orderItem} key={index}/>\r\n                            })\r\n                        }\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default PerfilContainer;","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\components\\order\\orderitem\\index.js",["198"],"E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\components\\order\\orderitem\\orderdetail\\index.js",["199","200","201","202","203"],"import { Link } from 'react-router-dom';\r\nimport NumberFormat from 'react-number-format';\r\nimport React, { useState } from 'react';\r\nimport OrderDetailItem from './orderdetailitem';\r\nimport './orderdetail.css';\r\nimport { Col, Row, Container, Table } from 'react-bootstrap';\r\n\r\nconst OrderDetail = ({order}) => {\r\n    return (\r\n        <Table responsive className=\"product mt-3\">\r\n            <thead>\r\n                <tr>\r\n                    <th className=\"product-thumbnail\">&nbsp;</th>\r\n                    <th className=\"product-name\">Producto</th>\r\n                    <th className=\"product-price\">Precio</th>\r\n                    <th className=\"product-quantity\">Cantidad</th>\r\n                    <th className=\"product-subtotal\">Total</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {order.items &&\r\n                    order.items.map((item, index) => \r\n                        <OrderDetailItem orderItem={item} key={index}/>\r\n                    )\r\n                }\r\n            </tbody>\r\n            <tfoot>\r\n                <tr>\r\n                    <td colSpan=\"4\" className=\"text-right\">Subtotal</td>\r\n                    <td className=\"order-total\">\r\n                        <NumberFormat value={order.total} decimalSeparator={','} displayType={'text'} thousandSeparator={'.'} prefix={'$'} />\r\n                    </td>\r\n                </tr>\r\n            </tfoot>\r\n        </Table>\r\n    );\r\n}\r\n\r\nexport default OrderDetail;","E:\\Curso-Coder\\clase2\\proyecto-pela\\src\\components\\order\\orderitem\\orderdetail\\orderdetailitem\\index.js",[],{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","severity":1,"message":"209","line":4,"column":37,"nodeType":"210","messageId":"211","endLine":4,"endColumn":40},{"ruleId":"208","severity":1,"message":"212","line":1,"column":10,"nodeType":"210","messageId":"211","endLine":1,"endColumn":14},{"ruleId":"208","severity":1,"message":"209","line":2,"column":37,"nodeType":"210","messageId":"211","endLine":2,"endColumn":40},{"ruleId":"208","severity":1,"message":"212","line":1,"column":10,"nodeType":"210","messageId":"211","endLine":1,"endColumn":14},{"ruleId":"213","severity":1,"message":"214","line":42,"column":8,"nodeType":"215","endLine":42,"endColumn":18,"suggestions":"216"},{"ruleId":"213","severity":1,"message":"217","line":21,"column":8,"nodeType":"215","endLine":21,"endColumn":10,"suggestions":"218"},{"ruleId":"204","replacedBy":"219"},{"ruleId":"206","replacedBy":"220"},{"ruleId":"221","severity":1,"message":"222","line":37,"column":30,"nodeType":"223","messageId":"224","endLine":37,"endColumn":32},{"ruleId":"221","severity":1,"message":"222","line":40,"column":55,"nodeType":"223","messageId":"224","endLine":40,"endColumn":57},{"ruleId":"208","severity":1,"message":"225","line":13,"column":25,"nodeType":"210","messageId":"211","endLine":13,"endColumn":39},{"ruleId":"213","severity":1,"message":"226","line":38,"column":8,"nodeType":"215","endLine":38,"endColumn":18,"suggestions":"227"},{"ruleId":"208","severity":1,"message":"228","line":7,"column":13,"nodeType":"210","messageId":"211","endLine":7,"endColumn":17},{"ruleId":"221","severity":1,"message":"229","line":21,"column":69,"nodeType":"223","messageId":"224","endLine":21,"endColumn":71},{"ruleId":"221","severity":1,"message":"222","line":25,"column":62,"nodeType":"223","messageId":"224","endLine":25,"endColumn":64},{"ruleId":"221","severity":1,"message":"222","line":13,"column":34,"nodeType":"223","messageId":"224","endLine":13,"endColumn":36},{"ruleId":"221","severity":1,"message":"222","line":74,"column":35,"nodeType":"223","messageId":"224","endLine":74,"endColumn":37},{"ruleId":"208","severity":1,"message":"230","line":89,"column":19,"nodeType":"210","messageId":"211","endLine":89,"endColumn":29},{"ruleId":"208","severity":1,"message":"231","line":13,"column":37,"nodeType":"210","messageId":"211","endLine":13,"endColumn":42},{"ruleId":"208","severity":1,"message":"232","line":10,"column":25,"nodeType":"210","messageId":"211","endLine":10,"endColumn":39},{"ruleId":"208","severity":1,"message":"233","line":1,"column":27,"nodeType":"210","messageId":"211","endLine":1,"endColumn":36},{"ruleId":"208","severity":1,"message":"234","line":10,"column":19,"nodeType":"210","messageId":"211","endLine":10,"endColumn":27},{"ruleId":"208","severity":1,"message":"235","line":11,"column":18,"nodeType":"210","messageId":"211","endLine":11,"endColumn":25},{"ruleId":"208","severity":1,"message":"231","line":14,"column":37,"nodeType":"210","messageId":"211","endLine":14,"endColumn":42},{"ruleId":"208","severity":1,"message":"236","line":15,"column":24,"nodeType":"210","messageId":"211","endLine":15,"endColumn":36},{"ruleId":"213","severity":1,"message":"237","line":16,"column":15,"nodeType":"238","endLine":21,"endColumn":6},{"ruleId":"213","severity":1,"message":"239","line":21,"column":8,"nodeType":"215","endLine":21,"endColumn":10,"suggestions":"240"},{"ruleId":"208","severity":1,"message":"241","line":6,"column":31,"nodeType":"210","messageId":"211","endLine":6,"endColumn":37},{"ruleId":"208","severity":1,"message":"242","line":11,"column":12,"nodeType":"210","messageId":"211","endLine":11,"endColumn":21},{"ruleId":"213","severity":1,"message":"243","line":28,"column":8,"nodeType":"215","endLine":28,"endColumn":10,"suggestions":"244"},{"ruleId":"208","severity":1,"message":"245","line":4,"column":8,"nodeType":"210","messageId":"211","endLine":4,"endColumn":16},{"ruleId":"208","severity":1,"message":"212","line":1,"column":10,"nodeType":"210","messageId":"211","endLine":1,"endColumn":14},{"ruleId":"208","severity":1,"message":"246","line":3,"column":17,"nodeType":"210","messageId":"211","endLine":3,"endColumn":25},{"ruleId":"208","severity":1,"message":"247","line":6,"column":10,"nodeType":"210","messageId":"211","endLine":6,"endColumn":13},{"ruleId":"208","severity":1,"message":"248","line":6,"column":15,"nodeType":"210","messageId":"211","endLine":6,"endColumn":18},{"ruleId":"208","severity":1,"message":"249","line":6,"column":20,"nodeType":"210","messageId":"211","endLine":6,"endColumn":29},"no-native-reassign",["250"],"no-negated-in-lhs",["251"],"no-unused-vars","'Nav' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getAllItems' and 'getItemsByCategory'. Either include them or remove the dependency array.","ArrayExpression",["252"],"React Hook useEffect has missing dependencies: 'getItemByID' and 'itemId'. Either include them or remove the dependency array.",["253"],["250"],["251"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setQueryParams' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAllItems' and 'queryParams'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCriterio' needs the current value of 'queryParams'.",["254"],"'cart' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'FieldValue' is assigned a value but never used.","'watch' is assigned a value but never used.","'setTabSelected' is assigned a value but never used.","'useEffect' is defined but never used.","'setError' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'setBtnSubmit' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'getOrderByID' and 'orderId'. Either include them or remove the dependency array.",["255"],"'Button' is defined but never used.","'isLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getOrdersByUser' and 'loggedUser.id'. Either include them or remove the dependency array.",["256"],"'firebase' is defined but never used.","'useState' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'Container' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},"Update the dependencies array to be: [category, getAllItems, getItemsByCategory]",{"range":"267","text":"268"},"Update the dependencies array to be: [getItemByID, itemId]",{"range":"269","text":"270"},"Update the dependencies array to be: [criterio, getAllItems, queryParams]",{"range":"271","text":"272"},"Update the dependencies array to be: [getOrderByID, orderId]",{"range":"273","text":"274"},"Update the dependencies array to be: [getOrdersByUser, loggedUser.id]",{"range":"275","text":"276"},[1763,1773],"[category, getAllItems, getItemsByCategory]",[863,865],"[getItemByID, itemId]",[1804,1814],"[criterio, getAllItems, queryParams]",[900,902],"[getOrderByID, orderId]",[1210,1212],"[getOrdersByUser, loggedUser.id]"]